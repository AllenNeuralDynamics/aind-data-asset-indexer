name: Tag and publish
on:
  push:
    branches:
      - main
jobs:
  tag:
    name: Bump version
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.output_version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.default_branch }}
          fetch-depth: 0
          token: ${{ secrets.SERVICE_TOKEN }}
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.SERVICE_TOKEN }}
          release_branches: ${{ inputs.default_branch }}
          default_bump: patch
      - name: Get version file name set variables
        run: |
          pkg_name=$(grep -P 'version = \{attr = .*\}' pyproject.toml | grep -oP '\w+.__version__')
          init_file="./code/${pkg_name//.__version__}/__init__.py"
          echo "VERSION_FILE=$init_file" >> "$GITHUB_ENV"
          echo "VERSION=${{ steps.tag_version.outputs.new_version }}" >> "$GITHUB_ENV"
      - name: Update version file with new version
        run: |
          grep "__version__" "$VERSION_FILE"
          sed -i --debug --expression="s|__version__.*|__version__ = \"${{ env.VERSION }}\"|" "$VERSION_FILE"
      - name: Set output
        id: output_version
        run: echo "new_version=${{ env.VERSION }}" >> "$GITHUB_OUTPUT"
      - name: Commit and Push version bump
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "ci: version bump [skip actions]"
          add: ${{ env.VERSION_FILE }}
# Add step to release to Code Ocean on major versions?
  publish:
    if: false
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - uses: actions/checkout@v3
      - name: Pull latest changes
        run: git pull origin main
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          push: true
          tags: |
            ghcr.io/allenneuraldynamics/aind-data-asset-indexer:${{ needs.tag.outputs.new_version }}
            ghcr.io/allenneuraldynamics/aind-data-asset-indexer:latest
